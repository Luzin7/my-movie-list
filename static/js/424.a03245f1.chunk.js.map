{"version":3,"file":"static/js/424.a03245f1.chunk.js","mappings":"yNA0CA,MArCA,WACE,IAAMA,EAAUC,aAIhB,WACEC,EAASC,GAKaC,EALU,EAKLC,EALQ,GAMnCD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,GAAOA,KANhDM,cAAcV,GAGhB,IAAwBI,EAAKC,CAF5B,GAR0C,KAC3C,GAA0BM,EAAAA,EAAAA,UAASX,GAAnC,eAAOG,EAAP,KAAcD,EAAd,KACMU,GAAWC,EAAAA,EAAAA,MA0BjB,OAJIV,EAAQ,KAPM,UAAZW,EAAAA,EAAAA,KACFF,EAASG,EAAAA,IACY,UAAZD,EAAAA,EAAAA,MACTF,EAASG,EAAAA,MASX,iBAAKC,UAAU,uBAAf,WACE,+FACA,qBAAUC,GAAG,gBAAgBZ,IAAI,MAAMF,MAAOA,MAGnD,ECjCD,MAJA,WACE,OAAO,SAAC,EAAD,GACR,C","sources":["components/RedirectUser.jsx","pages/Redirect.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { TOKEN } from \"../utils/getAuthInfos\";\r\nimport * as Path from \"../utils/pathNames\";\r\n\r\nfunction RedirectUser() {\r\n  const counter = setInterval(counterUpdate, 100);\r\n  const [value, setValue] = useState(counter);\r\n  const navigate = useNavigate();\r\n\r\n  function counterUpdate() {\r\n    setValue(value + getRandomValue(1, 10));\r\n\r\n    clearInterval(counter);\r\n  }\r\n\r\n  function getRandomValue(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n  }\r\n\r\n  function navigateBack() {\r\n    if (TOKEN() !== \"true\") {\r\n      navigate(Path.REGISTER);\r\n    } else if (TOKEN() === \"true\") {\r\n      navigate(Path.MOVIES);\r\n    }\r\n  }\r\n\r\n  if (value > 99) {\r\n    navigateBack();\r\n  }\r\n\r\n  return (\r\n    <div className=\"check__auth notFound\">\r\n      <h1>Aguarde um pouco, estamos te redirecionando para o local correto.</h1>\r\n      <progress id=\"progress__bar\" max=\"100\" value={value} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RedirectUser;\r\n","import React from \"react\";\r\nimport RedirectUser from \"../components/RedirectUser\";\r\n\r\nfunction Redirect() {\r\n  return <RedirectUser />;\r\n}\r\n\r\nexport default Redirect;\r\n"],"names":["counter","setInterval","setValue","value","min","max","Math","ceil","floor","random","clearInterval","useState","navigate","useNavigate","TOKEN","Path","className","id"],"sourceRoot":""}
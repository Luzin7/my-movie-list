{"version":3,"file":"static/js/578.11c163f1.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Movies.jsx","pages/DefaultHome.jsx"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { React, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { FavoriteMovies } from \"./../providers/favoriteMovies\";\r\n\r\nimport { MOVIES, NEXT_MOVIES } from \"../data/movies\";\r\n\r\nimport \"../styles/movies/movies.css\";\r\nimport \"../styles/movies/moviesWatched.css\";\r\nimport \"../styles/movies/nextMovies.css\";\r\n\r\nfunction Movies() {\r\n  // hook personalizado trazendo o estado do context API\r\n  const { favoriteMovies, setFavoriteMovies } = FavoriteMovies();\r\n  localStorage.setItem(\"favMovies\", JSON.stringify(favoriteMovies));\r\n\r\n  // estado para receber a pesquisa do usuário\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // Pedindo permissão para notificar o usuário\r\n  useEffect(() => {\r\n    Notification.requestPermission()\r\n      .then((status) => status === \"granted\")\r\n      .then((isAllowed) => {\r\n        if (!isAllowed) {\r\n          return;\r\n        }\r\n        // conteúdo da notificação\r\n        new Notification(\"Ainda estou em desenvolvimento!\", {\r\n          body: \"O My Movie List é um site em desenvolvimento, se achar algo que não agrade, por favor, entre em contato.\",\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const moviesLenght = MOVIES.length;\r\n  const nextMoviesLenght = NEXT_MOVIES.length;\r\n  const totalMovies = moviesLenght + nextMoviesLenght;\r\n\r\n  // filtrando todos os filmes disponíveis\r\n  const movies = MOVIES.filter((e) =>\r\n    e.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  // funçao para saber se o filme está nos favoritos\r\n  const isFavorite = (id) => favoriteMovies.find((movie) => movie.id === id);\r\n\r\n  // recomendar um filme aleatório sempre que a página atualiza\r\n  const randomMovieRecomendation =\r\n    NEXT_MOVIES[Math.floor(Math.random() * NEXT_MOVIES.length)];\r\n\r\n  // funçao para adicionar o filme escolhido pelo usuário aos favoritos\r\n  function addFavoriteMovie(id) {\r\n    const movie = MOVIES.find((movie) => movie.id === id);\r\n    setFavoriteMovies((prev) => [...prev, movie]);\r\n    localStorage.setItem(\"favMovies\", JSON.stringify(favoriteMovies));\r\n  }\r\n\r\n  // funçao para levar o usuário ao topo da página\r\n  function goTopBtn() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  return (\r\n    <main className=\"movies\">\r\n      <section className=\"search__movies\">\r\n        <div className=\"search\">\r\n          <label className=\"search__label\">Pesquise um filme</label>\r\n          <input\r\n            className=\"search__input\"\r\n            type=\"search\"\r\n            placeholder=\"Filme\"\r\n            onChange={(e) => setSearch(() => e.target.value)}\r\n          />\r\n        </div>\r\n      </section>\r\n      <section className=\"movies__watched\">\r\n        {movies.length > 0 ? (\r\n          <>\r\n            <h1 className=\"movies__title\">Filmes avaliados</h1>\r\n            <span id=\"total-watched\">\r\n              {moviesLenght}/{totalMovies}\r\n            </span>\r\n            <div className=\"movies__content\">\r\n              <ul className=\"movies__cards\">\r\n                <div className=\"slider\">\r\n                  <div className=\"slides\">\r\n                    {movies.map((movie) => (\r\n                      <li key={movie.id} className=\"movie__card watched\">\r\n                        {/* condicionando o estilo da estrela caso o filme tenha sido favoritado ou não */}\r\n                        {isFavorite(movie.id) ? (\r\n                          <div className=\"isfavorite\">\r\n                            <span className=\"favorite true\">★</span>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"isfavorite\">\r\n                            <span\r\n                              className=\"favorite false\"\r\n                              onClick={() => {\r\n                                addFavoriteMovie(movie.id);\r\n                              }}\r\n                            >\r\n                              ☆\r\n                            </span>\r\n                          </div>\r\n                        )}\r\n                        <Link to={`/movie/${movie.id}`}>\r\n                          <div className=\"movies__img\">\r\n                            <img\r\n                              className=\"movie__img\"\r\n                              src={movie.img}\r\n                              alt={`Capa do filme ${movie.name}`}\r\n                            />\r\n                          </div>\r\n                          <h2 className=\"movie__title-text\">{movie.name}</h2>\r\n                        </Link>\r\n                      </li>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </ul>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <h1 className=\"movies__title\">Não avaliamos esse filme ainda</h1>\r\n        )}\r\n      </section>\r\n      <section className=\"next__movies\">\r\n        <h1 className=\"next movies__title-sec\">Veja também</h1>\r\n        <div className=\"movies__content\">\r\n          <ul className=\"movies__cards\">\r\n            <li\r\n              key={randomMovieRecomendation.id}\r\n              className=\"movie__card unwatched\"\r\n            >\r\n              <h2 className=\"movie__title\">{randomMovieRecomendation.name}</h2>\r\n              <div className=\"movies__img\">\r\n                <img\r\n                  className=\"movie__img\"\r\n                  src={randomMovieRecomendation.media}\r\n                  alt={`Capa do filme ${randomMovieRecomendation.name}`}\r\n                />\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n      <button className=\"btn\" id=\"go-back__link\" onClick={goTopBtn}>\r\n        Voltar ao topo\r\n      </button>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Movies from \"../components/Movies\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <Header />\r\n      <Movies />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","FavoriteMovies","favoriteMovies","setFavoriteMovies","localStorage","setItem","JSON","stringify","useState","search","setSearch","useEffect","Notification","requestPermission","then","status","isAllowed","body","moviesLenght","MOVIES","totalMovies","NEXT_MOVIES","movies","e","name","toLowerCase","includes","randomMovieRecomendation","Math","floor","random","className","type","placeholder","onChange","target","value","length","id","map","movie","find","onClick","prev","addFavoriteMovie","to","src","img","alt","media","window","scrollTo","Header"],"sourceRoot":""}